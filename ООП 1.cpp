
#include <iostream>
#include <cmath>
#define _USE_MATH_DEFINES
#include <math.h>
using namespace std;
class Angle {
private: 
	float ang;
public:
	void Set_value(float a) {
		ang = a;}// вводим число.
	float Get_value() {
		return ang;}// выводим число, которое мы ввели.
	float Degrees_Radians() {
		return ang / 180 * M_PI;};// функция, которая переводит градусы в радианы.
	float Degrees_0_360();// приведение к диапазону 0-360.
	void Add_Degrees(float b);// Увеличение угла на заданную величину.
	void Subtract_Degrees(float b);//Уменьшение угла на заданную величину.
	float Get_Sin();// Получение синуса угла.
	bool Compare_Angles(float c);//Сравнение углов.
};


int main()
{
	Angle z;
	int q;
	float b;
	cin >> b;
	cin >> q;
	z.Set_value(q);
	cout << z.Get_value();
	cout << z.Degrees_Radians();
	return 0;
}

// Запуск программы: CTRL+F5 или меню "Отладка" > "Запуск без отладки"
// Отладка программы: F5 или меню "Отладка" > "Запустить отладку"

// Советы по началу работы 
//   1. В окне обозревателя решений можно добавлять файлы и управлять ими.
//   2. В окне Team Explorer можно подключиться к системе управления версиями.
//   3. В окне "Выходные данные" можно просматривать выходные данные сборки и другие сообщения.
//   4. В окне "Список ошибок" можно просматривать ошибки.
//   5. Последовательно выберите пункты меню "Проект" > "Добавить новый элемент", чтобы создать файлы кода, или "Проект" > "Добавить существующий элемент", чтобы добавить в проект существующие файлы кода.
//   6. Чтобы снова открыть этот проект позже, выберите пункты меню "Файл" > "Открыть" > "Проект" и выберите SLN-файл.
